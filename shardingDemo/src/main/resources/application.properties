# \u6253\u5370SQL
spring.shardingsphere.props.sql-show = true
spring.main.allow-bean-definition-overriding = true

# ----------------\u6570\u636E\u6E90\u914D\u7F6E
# \u6307\u5B9A\u5BF9\u5E94\u7684\u5E93
spring.shardingsphere.datasource.names=m0,m1

spring.shardingsphere.datasource.m0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m0.url=jdbc:mysql://192.168.65.212:3306/shardingdb1?serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=peng1234

spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://192.168.65.212:3306/shardingdb2?serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=peng1234
#------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u914D\u7F6E
# \u96EA\u82B1\u7B97\u6CD5\uFF0C\u751F\u6210Long\u7C7B\u578B\u4E3B\u952E\u3002
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.worker-id=1
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.max-vibration-offset=8
#spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=COSID
# \u6307\u5B9A\u5206\u5E03\u5F0F\u4E3B\u952E\u751F\u6210\u7B56\u7565
spring.shardingsphere.rules.sharding.tables.course.key-generate-strategy.column=cid
spring.shardingsphere.rules.sharding.tables.course.key-generate-strategy.key-generator-name=alg_snowflake
#-----------------------\u914D\u7F6E\u5B9E\u9645\u5206\u7247\u8282\u70B9
spring.shardingsphere.rules.sharding.tables.course.actual-data-nodes=m$->{0..1}.course_$->{1..2}
#-----------------------MOD\u5206\u5E93\u7B56\u7565
spring.shardingsphere.rules.sharding.tables.course.database-strategy.standard.sharding-column=cid
spring.shardingsphere.rules.sharding.tables.course.database-strategy.standard.sharding-algorithm-name=course_db_alg

spring.shardingsphere.rules.sharding.sharding-algorithms.course_db_alg.type=MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.course_db_alg.props.sharding-count=2

# ----------------\u5206\u8868\u7B56\u7565
#standard-\u7CBE\u786E\u67E5\u8BE2
spring.shardingsphere.rules.sharding.tables.course.table-strategy.standard.sharding-column=cid
spring.shardingsphere.rules.sharding.tables.course.table-strategy.standard.sharding-algorithm-name=course_tbl_alg


# INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.props.algorithm-expression=course_$->{cid%2+1}
#\u8FD9\u79CD\u65B9\u5F0F\u4F1A\u9020\u6210\u6570\u636E\u65E0\u6CD5\u5206\u5230\u56DB\u5F20\u8868\u4E2D
#\u89E3\u51B3\u65B9\u6848\u662FSNOWFLAKE\u6362\u6210\u81EA\u5DF1\u6269\u5C55\u7684MYSNOWFLAKE
spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.props.algorithm-expression=course_$->{((cid+1)%4).intdiv(2)+1}
# inline\u5141\u8BB8\u8FDB\u884C\u8303\u56F4\u67E5\u8BE2
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.props.allow-range-query-with-inline-sharding=true

#complex-\u591A\u5206\u7247\u952E\u7EC4\u5408\u67E5\u8BE2
#spring.shardingsphere.rules.sharding.tables.course.table-strategy.complex.sharding-columns=cid,user_id
#spring.shardingsphere.rules.sharding.tables.course.table-strategy.complex.sharding-algorithm-name=course_tbl_alg
# \u7EC4\u5408\u8868\u8FBE\u5F0F
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.type=COMPLEX_INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.props.algorithm-expression=course_$->{(cid+user_id+1)%2+1}
# \u590D\u6742\u903B\u8F91- \u65E0\u6CD5\u4F7F\u7528COMPLEX_INLINE\u8868\u8FBE\u5F0F\u5904\u7406
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.type=MYCOMPLEX
# CLASS_BASED\u81EA\u5B9A\u4E49\u5206\u7247\u7B97\u6CD5
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.type=CLASS_BASED
# \u4E09\u79CD\u6570\u636E\u5206\u7247\u65B9\u5F0F STANDARD|COMPLEX|HINT
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.props.strategy=COMPLEX
# \u81EA\u5B9A\u4E49\u7B97\u6CD5\u9700\u8981\u5B9E\u73B0\u5BF9\u5E94\u7684\u63A5\u53E3 STANDARD-> StandardShardingAlgorithm;COMPLEX->ComplexKeysShardingAlgorithm;HINT -> HintShardingAlgorithm
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.props.algorithmClassName=com.roy.shardingDemo.algorithm.MyComplexAlgorithm

# hint-\u4E0ESQL\u65E0\u5173\u7684\u5206\u5E93\u5206\u8868\u65B9\u6848
#spring.shardingsphere.rules.sharding.tables.course.table-strategy.hint.sharding-algorithm-name=course_tbl_alg
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.type=HINT_INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.course_tbl_alg.props.algorithm-expression=course_$->{value}

# \u5BA1\u8BA1\u529F\u80FD SQL\u5FC5\u987B\u5305\u542B\u5206\u7247\u952E
#spring.shardingsphere.rules.sharding.tables.course.audit-strategy.auditor-names[0]=course_auditor
#spring.shardingsphere.rules.sharding.tables.course.audit-strategy.allow-hint-disable=true
#
#spring.shardingsphere.rules.sharding.auditors.course_auditor.type=DML_SHARDING_CONDITIONS